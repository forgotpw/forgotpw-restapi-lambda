service: secrets-api

# pin to a specific Serverless version
frameworkVersion: ">=1.2.0 <2.0.0"

provider:
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  deploymentBucket: forgotpw-deploy-${env:AWS_ENV, 'dev'}
  stage: live
  logRetentionInDays: 14 # cloudwatch logs
  timeout: 10 # seconds
  versionFunctions: true
  apiGateway:
    restApiId: ${env:REST_API_ID}
    restApiRootResourceId: ${env:ROOT_RESOURCE_ID}
    restApiResources:
      '/v1': '${env:V1_RESOURCE_ID}'
  iamRoleStatements:
    -
      Effect: Allow
      Action:
        - s3:GetObject
        - s3:PutObject
        - s3:ListBucket
      Resource:
        - arn:aws:s3:::forgotpw-usertokens-${env:AWS_ENV, 'dev'}/*
        - arn:aws:s3:::forgotpw-usertokens-${env:AWS_ENV, 'dev'}
    -
      Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:sns'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'fpw-secret-store-request'
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:sns'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'fpw-secret-retrieve-request'
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:sns'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'fpw-code-send-request'
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:sns'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'fpw-nuke-account-request'
    -
      Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:UpdateItem
      Resource: 
        - 'Fn::Join':
          - ':'
          -
            - 'arn:aws:dynamodb'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'table/fpw_verification_code'

plugins:
  - serverless-mocha-plugin
  - serverless-prune-plugin

custom:
  # serverless-prune-plugin
  prune:
    automatic: true
    number: 5

package:
  exclude:
    - .git/**

functions:
  fpw-restapi:
    name: 'fpw-restapi'
    handler: index.handler
    environment:
      USERTOKEN_HASH_HMAC: ${ssm:/fpw/USERTOKEN_HASH_HMAC~true}
      USERTOKENS_S3_BUCKET: forgotpw-usertokens-${env:AWS_ENV, 'dev'}
      STORE_SNS_TOPIC_NAME: fpw-secret-store-request
      RETRIEVE_SNS_TOPIC_NAME: fpw-secret-retrieve-request
      SENDCODE_SNS_TOPIC_NAME: fpw-code-send-request
      NUKEACCOUNT_SNS_TOPIC_NAME: fpw-nuke-account-request
      CODE_INVALIDCOUNT_MAX: 5
      LOG_LEVEL: 'debug'
    events:
      - http:
          path: v1/{proxy+}
          method: any
          integration: lambda-proxy
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-FPW-VerificationCode
              - Access-Control-Allow-Headers
              - Access-Control-Allow-Origin
              - Access-Control-Allow-Methods
resources:
  Resources:
    StoreRequestSNSEvent:
      Type: AWS::SNS::Topic
      Properties: 
        DisplayName: fpw-secret-store-request
        TopicName: fpw-secret-store-request
    RetrieveRequestSNSEvent:
      Type: AWS::SNS::Topic
      Properties: 
        DisplayName: fpw-secret-retrieve-request
        TopicName: fpw-secret-retrieve-request
    SendCodeRequestSNSEvent:
      Type: AWS::SNS::Topic
      Properties: 
        DisplayName: fpw-code-send-request
        TopicName: fpw-code-send-request
    NukeAccountRequestSNSEvent:
      Type: AWS::SNS::Topic
      Properties: 
        DisplayName: fpw-nuke-account-request
        TopicName: fpw-nuke-account-request
